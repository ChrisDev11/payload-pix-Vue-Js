{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"PIX Payload Generator\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"nome\"\n}, \"Nome:\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"chavepix\"\n}, \"Chave PIX:\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"valor\"\n}, \"Valor:\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"cidade\"\n}, \"Cidade:\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"txtId\"\n}, \"Texto ID:\", -1 /* HOISTED */);\nconst _hoisted_7 = [\"src\"];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.nome = $event),\n    id: \"nome\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.nome]])]), _createElementVNode(\"div\", null, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.chavepix = $event),\n    id: \"chavepix\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.chavepix]])]), _createElementVNode(\"div\", null, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.valor = $event),\n    id: \"valor\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.valor]])]), _createElementVNode(\"div\", null, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.cidade = $event),\n    id: \"cidade\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.cidade]])]), _createElementVNode(\"div\", null, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.txtId = $event),\n    id: \"txtId\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.txtId]])]), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => _ctx.gerarPayload && _ctx.gerarPayload(...args))\n  }, \"Gerar Payload e QR Code\"), _createElementVNode(\"div\", null, [_ctx.qrcode ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: _ctx.qrcode,\n    alt: \"QR Code PIX\"\n  }, null, 8 /* PROPS */, _hoisted_7)) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["_createElementVNode","for","_createElementBlock","_hoisted_1","_hoisted_2","type","_ctx","nome","$event","id","_hoisted_3","chavepix","_hoisted_4","valor","_hoisted_5","cidade","_hoisted_6","txtId","onClick","_cache","args","gerarPayload","qrcode","src","alt"],"sources":["C:\\Users\\11\\Desktop\\teste-pix.js\\teste-pix.js\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <h3>PIX Payload Generator</h3>\n    <div>\n      <label for=\"nome\">Nome:</label>\n      <input type=\"text\" v-model=\"nome\" id=\"nome\">\n    </div>\n    <div>\n      <label for=\"chavepix\">Chave PIX:</label>\n      <input type=\"text\" v-model=\"chavepix\" id=\"chavepix\">\n    </div>\n    <div>\n      <label for=\"valor\">Valor:</label>\n      <input type=\"text\" v-model=\"valor\" id=\"valor\">\n    </div>\n    <div>\n      <label for=\"cidade\">Cidade:</label>\n      <input type=\"text\" v-model=\"cidade\" id=\"cidade\">\n    </div>\n    <div>\n      <label for=\"txtId\">Texto ID:</label>\n      <input type=\"text\" v-model=\"txtId\" id=\"txtId\">\n    </div>\n    <button @click=\"gerarPayload\">Gerar Payload e QR Code</button>\n    <div>\n      <img v-if=\"qrcode\" :src=\"qrcode\" alt=\"QR Code PIX\">\n    </div>\n  </div>\n</template>\n\n<script>\nimport crc from 'crc';\nimport QRCode from 'qrcode-generator';\n\nexport default {\n  \n  name: 'HomeView'\n\n  data() {\n    return {\n      nome: '',\n      chavepix: '',\n      valor: '',\n      cidade: '',\n      txtId: '',\n      qrcode: null,\n    };\n  },\n  methods: {\n    gerarPayload() {\n      const valorFloat = parseFloat(this.valor.replace(',', '.')).toFixed(2);\n\n      const merchantAccount = `26${(14 + this.chavepix.length).toString().padStart(2, '0')}${this.chavepix}`;\n      const transactionAmount = `54${(2 + valorFloat.length).toString().padStart(2, '0')}${valorFloat}`;\n      const addDataField = `62${(2 + this.txtId.length).toString().padStart(2, '0')}${this.txtId}`;\n      const nome_tam = `59${(2 + this.nome.length).toString().padStart(2, '0')}${this.nome}`;\n      const cidade_tam = `60${(2 + this.cidade.length).toString().padStart(2, '0')}${this.cidade}`;\n\n      const payload = `000201${merchantAccount}520400005303986${transactionAmount}5802BR${nome_tam}${cidade_tam}${addDataField}6304`;\n\n      // Calcular o CRC-16 usando a biblioteca 'crc'\n      const crc16Code = crc.crc16xmodem(Buffer.from(payload, 'utf-8')).toString(16).toUpperCase().padStart(4, '0');\n\n      const payload_completa = `${payload}${crc16Code}`;\n\n      // Gerar o QR Code usando a biblioteca 'qrcode-generator'\n      const qrcode = QRCode(0, 'L'); // Configurar o tipo de QR Code e nível de correção\n      qrcode.addData(payload_completa);\n      qrcode.make();\n\n      // Obter a imagem do QR Code em formato base64\n      const qrCodeImage = qrcode.createDataURL(4); // Use 4 para obter uma imagem maior\n\n      this.qrcode = qrCodeImage;\n    },\n  },\n\n}\n</script>\n"],"mappings":";gCAEIA,mBAAA,CAA8B,YAA1B,uBAAqB;gCAEvBA,mBAAA,CAA+B;EAAxBC,GAAG,EAAC;AAAM,GAAC,OAAK;gCAIvBD,mBAAA,CAAwC;EAAjCC,GAAG,EAAC;AAAU,GAAC,YAAU;gCAIhCD,mBAAA,CAAiC;EAA1BC,GAAG,EAAC;AAAO,GAAC,QAAM;gCAIzBD,mBAAA,CAAmC;EAA5BC,GAAG,EAAC;AAAQ,GAAC,SAAO;gCAI3BD,mBAAA,CAAoC;EAA7BC,GAAG,EAAC;AAAO,GAAC,WAAS;;;uBAnBhCC,mBAAA,CA0BM,cAzBJC,UAA8B,EAC9BH,mBAAA,CAGM,cAFJI,UAA+B,E,gBAC/BJ,mBAAA,CAA4C;IAArCK,IAAI,EAAC,MAAM;+DAAUC,IAAA,CAAAC,IAAI,GAAAC,MAAA;IAAEC,EAAE,EAAC;iDAATH,IAAA,CAAAC,IAAI,E,KAElCP,mBAAA,CAGM,cAFJU,UAAwC,E,gBACxCV,mBAAA,CAAoD;IAA7CK,IAAI,EAAC,MAAM;+DAAUC,IAAA,CAAAK,QAAQ,GAAAH,MAAA;IAAEC,EAAE,EAAC;iDAAbH,IAAA,CAAAK,QAAQ,E,KAEtCX,mBAAA,CAGM,cAFJY,UAAiC,E,gBACjCZ,mBAAA,CAA8C;IAAvCK,IAAI,EAAC,MAAM;+DAAUC,IAAA,CAAAO,KAAK,GAAAL,MAAA;IAAEC,EAAE,EAAC;iDAAVH,IAAA,CAAAO,KAAK,E,KAEnCb,mBAAA,CAGM,cAFJc,UAAmC,E,gBACnCd,mBAAA,CAAgD;IAAzCK,IAAI,EAAC,MAAM;+DAAUC,IAAA,CAAAS,MAAM,GAAAP,MAAA;IAAEC,EAAE,EAAC;iDAAXH,IAAA,CAAAS,MAAM,E,KAEpCf,mBAAA,CAGM,cAFJgB,UAAoC,E,gBACpChB,mBAAA,CAA8C;IAAvCK,IAAI,EAAC,MAAM;+DAAUC,IAAA,CAAAW,KAAK,GAAAT,MAAA;IAAEC,EAAE,EAAC;iDAAVH,IAAA,CAAAW,KAAK,E,KAEnCjB,mBAAA,CAA8D;IAArDkB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEd,IAAA,CAAAe,YAAA,IAAAf,IAAA,CAAAe,YAAA,IAAAD,IAAA,CAAY;KAAE,yBAAuB,GACrDpB,mBAAA,CAEM,cADOM,IAAA,CAAAgB,MAAM,I,cAAjBpB,mBAAA,CAAmD;;IAA/BqB,GAAG,EAAEjB,IAAA,CAAAgB,MAAM;IAAEE,GAAG,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}