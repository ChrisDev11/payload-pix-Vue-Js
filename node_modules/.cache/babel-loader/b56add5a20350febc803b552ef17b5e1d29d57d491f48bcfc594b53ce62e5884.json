{"ast":null,"code":"import crc from 'crc';\nimport QRCode from 'qrcode-generator';\nexport default {\n  data() {\n    return {\n      nome: '',\n      chavepix: '',\n      valor: '',\n      cidade: '',\n      txtId: '',\n      qrcode: null,\n      payloadCompleta: ''\n    };\n  },\n  methods: {\n    gerarPayload() {\n      const valorFloat = parseFloat(this.valor.replace(',', '.')).toFixed(2);\n      const merchantAccount = `26${(14 + this.chavepix.length).toString().padStart(2, '0')}${this.chavepix}`;\n      const transactionAmount = `54${(2 + valorFloat.length).toString().padStart(2, '0')}${valorFloat}`;\n      const addDataField = `62${(2 + this.txtId.length).toString().padStart(2, '0')}${this.txtId}`;\n      const nome_tam = `59${(2 + this.nome.length).toString().padStart(2, '0')}${this.nome}`;\n      const cidade_tam = `60${(2 + this.cidade.length).toString().padStart(2, '0')}${this.cidade}`;\n      const payload = `000201${merchantAccount}520400005303986${transactionAmount}5802BR${nome_tam}${cidade_tam}${addDataField}6304`;\n      const payloadBuffer = new TextEncoder().encode(payload);\n      const crc16Code = crc.crc16xmodem(payloadBuffer).toString(16).toUpperCase().padStart(4, '0');\n      const payload_completa = `${payload}${crc16Code}`;\n      const qrcode = QRCode(0, 'L');\n      qrcode.addData(payload_completa);\n      qrcode.make();\n      const qrCodeImage = qrcode.createDataURL(4);\n      this.qrcode = qrCodeImage;\n      this.payloadCompleta = payload_completa; // Agora, armazenamos a payload completa\n    }\n  }\n};","map":{"version":3,"names":["crc","QRCode","data","nome","chavepix","valor","cidade","txtId","qrcode","payloadCompleta","methods","gerarPayload","valorFloat","parseFloat","replace","toFixed","merchantAccount","length","toString","padStart","transactionAmount","addDataField","nome_tam","cidade_tam","payload","payloadBuffer","TextEncoder","encode","crc16Code","crc16xmodem","toUpperCase","payload_completa","addData","make","qrCodeImage","createDataURL"],"sources":["C:\\Users\\11\\Desktop\\teste-pix.js\\teste-pix.js\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <h3>PIX Payload Generator</h3>\n    <div>\n      <label for=\"nome\">Nome:</label>\n      <input type=\"text\" v-model=\"nome\" id=\"nome\">\n    </div>\n    <div>\n      <label for=\"chavepix\">Chave PIX:</label>\n      <input type=\"text\" v-model=\"chavepix\" id=\"chavepix\">\n    </div>\n    <div>\n      <label for=\"valor\">Valor:</label>\n      <input type=\"text\" v-model=\"valor\" id=\"valor\">\n    </div>\n    <div>\n      <label for=\"cidade\">Cidade:</label>\n      <input type=\"text\" v-model=\"cidade\" id=\"cidade\">\n    </div>\n    <div>\n      <label for=\"txtId\">Texto ID:</label>\n      <input type=\"text\" v-model=\"txtId\" id=\"txtId\">\n    </div>\n    <button @click=\"gerarPayload\">Gerar Payload e QR Code</button>\n    <div>\n      <img v-if=\"qrcode\" :src=\"qrcode\" alt=\"QR Code PIX\">\n    </div>\n    <div v-if=\"payloadCompleta\">\n      <h4>Payload Completa:</h4>\n      <pre>{{ payloadCompleta }}</pre>\n    </div>\n  </div>\n</template>\n\n<script>\nimport crc from 'crc';\nimport QRCode from 'qrcode-generator';\n\nexport default {\n  data() {\n    return {\n      nome: '',\n      chavepix: '',\n      valor: '',\n      cidade: '',\n      txtId: '',\n      qrcode: null,\n      payloadCompleta: '',\n    };\n  },\n  methods: {\n    gerarPayload() {\n      const valorFloat = parseFloat(this.valor.replace(',', '.')).toFixed(2);\n\n      const merchantAccount = `26${(14 + this.chavepix.length).toString().padStart(2, '0')}${this.chavepix}`;\n      const transactionAmount = `54${(2 + valorFloat.length).toString().padStart(2, '0')}${valorFloat}`;\n      const addDataField = `62${(2 + this.txtId.length).toString().padStart(2, '0')}${this.txtId}`;\n      const nome_tam = `59${(2 + this.nome.length).toString().padStart(2, '0')}${this.nome}`;\n      const cidade_tam = `60${(2 + this.cidade.length).toString().padStart(2, '0')}${this.cidade}`;\n\n      const payload = `000201${merchantAccount}520400005303986${transactionAmount}5802BR${nome_tam}${cidade_tam}${addDataField}6304`;\n\n      const payloadBuffer = new TextEncoder().encode(payload);\n      const crc16Code = crc.crc16xmodem(payloadBuffer).toString(16).toUpperCase().padStart(4, '0');\n\n      const payload_completa = `${payload}${crc16Code}`;\n\n      const qrcode = QRCode(0, 'L');\n      qrcode.addData(payload_completa);\n      qrcode.make();\n\n      const qrCodeImage = qrcode.createDataURL(4);\n\n      this.qrcode = qrCodeImage;\n      this.payloadCompleta = payload_completa; // Agora, armazenamos a payload completa\n    },\n  },\n};\n</script>\n"],"mappings":"AAmCA,OAAOA,GAAE,MAAO,KAAK;AACrB,OAAOC,MAAK,MAAO,kBAAkB;AAErC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,IAAI;MACZC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,MAAMC,UAAS,GAAIC,UAAU,CAAC,IAAI,CAACR,KAAK,CAACS,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;MAEtE,MAAMC,eAAc,GAAK,KAAI,CAAC,EAAC,GAAI,IAAI,CAACZ,QAAQ,CAACa,MAAM,EAAEC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,GAAE,IAAI,CAACf,QAAS,EAAC;MACtG,MAAMgB,iBAAgB,GAAK,KAAI,CAAC,IAAIR,UAAU,CAACK,MAAM,EAAEC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,GAAEP,UAAW,EAAC;MACjG,MAAMS,YAAW,GAAK,KAAI,CAAC,IAAI,IAAI,CAACd,KAAK,CAACU,MAAM,EAAEC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,GAAE,IAAI,CAACZ,KAAM,EAAC;MAC5F,MAAMe,QAAO,GAAK,KAAI,CAAC,IAAI,IAAI,CAACnB,IAAI,CAACc,MAAM,EAAEC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,GAAE,IAAI,CAAChB,IAAK,EAAC;MACtF,MAAMoB,UAAS,GAAK,KAAI,CAAC,IAAI,IAAI,CAACjB,MAAM,CAACW,MAAM,EAAEC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,GAAE,IAAI,CAACb,MAAO,EAAC;MAE5F,MAAMkB,OAAM,GAAK,SAAQR,eAAgB,kBAAiBI,iBAAkB,SAAQE,QAAS,GAAEC,UAAW,GAAEF,YAAa,MAAK;MAE9H,MAAMI,aAAY,GAAI,IAAIC,WAAW,CAAC,CAAC,CAACC,MAAM,CAACH,OAAO,CAAC;MACvD,MAAMI,SAAQ,GAAI5B,GAAG,CAAC6B,WAAW,CAACJ,aAAa,CAAC,CAACP,QAAQ,CAAC,EAAE,CAAC,CAACY,WAAW,CAAC,CAAC,CAACX,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAE5F,MAAMY,gBAAe,GAAK,GAAEP,OAAQ,GAAEI,SAAU,EAAC;MAEjD,MAAMpB,MAAK,GAAIP,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC;MAC7BO,MAAM,CAACwB,OAAO,CAACD,gBAAgB,CAAC;MAChCvB,MAAM,CAACyB,IAAI,CAAC,CAAC;MAEb,MAAMC,WAAU,GAAI1B,MAAM,CAAC2B,aAAa,CAAC,CAAC,CAAC;MAE3C,IAAI,CAAC3B,MAAK,GAAI0B,WAAW;MACzB,IAAI,CAACzB,eAAc,GAAIsB,gBAAgB,EAAE;IAC3C;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}