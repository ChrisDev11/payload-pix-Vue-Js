{"ast":null,"code":"import crc from 'crc';\nimport QRCode from 'qrcode-generator';\nexport default {\n  name: 'HomeView',\n  data() {\n    return {\n      nome: '',\n      chavepix: '',\n      valor: '',\n      cidade: '',\n      txtId: '',\n      qrcode: null\n    };\n  },\n  methods: {\n    gerarPayload() {\n      const valorFloat = parseFloat(this.valor.replace(',', '.')).toFixed(2);\n      const merchantAccount = `26${(14 + this.chavepix.length).toString().padStart(2, '0')}${this.chavepix}`;\n      const transactionAmount = `54${(2 + valorFloat.length).toString().padStart(2, '0')}${valorFloat}`;\n      const addDataField = `62${(2 + this.txtId.length).toString().padStart(2, '0')}${this.txtId}`;\n      const nome_tam = `59${(2 + this.nome.length).toString().padStart(2, '0')}${this.nome}`;\n      const cidade_tam = `60${(2 + this.cidade.length).toString().padStart(2, '0')}${this.cidade}`;\n      const payload = `000201${merchantAccount}520400005303986${transactionAmount}5802BR${nome_tam}${cidade_tam}${addDataField}6304`;\n\n      // Calcular o CRC-16 usando a biblioteca 'crc'\n      const crc16Code = crc.crc16xmodem(Buffer.from(payload, 'utf-8')).toString(16).toUpperCase().padStart(4, '0');\n      const payload_completa = `${payload}${crc16Code}`;\n\n      // Gerar o QR Code usando a biblioteca 'qrcode-generator'\n      const qrcode = QRCode(0, 'L'); // Configurar o tipo de QR Code e nível de correção\n      qrcode.addData(payload_completa);\n      qrcode.make();\n\n      // Obter a imagem do QR Code em formato base64\n      const qrCodeImage = qrcode.createDataURL(4); // Use 4 para obter uma imagem maior\n\n      this.qrcode = qrCodeImage;\n    }\n  }\n};","map":{"version":3,"names":["crc","QRCode","name","data","nome","chavepix","valor","cidade","txtId","qrcode","methods","gerarPayload","valorFloat","parseFloat","replace","toFixed","merchantAccount","length","toString","padStart","transactionAmount","addDataField","nome_tam","cidade_tam","payload","crc16Code","crc16xmodem","Buffer","from","toUpperCase","payload_completa","addData","make","qrCodeImage","createDataURL"],"sources":["C:\\Users\\11\\Desktop\\teste-pix.js\\teste-pix.js\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <h3>PIX Payload Generator</h3>\n    <div>\n      <label for=\"nome\">Nome:</label>\n      <input type=\"text\" v-model=\"nome\" id=\"nome\">\n    </div>\n    <div>\n      <label for=\"chavepix\">Chave PIX:</label>\n      <input type=\"text\" v-model=\"chavepix\" id=\"chavepix\">\n    </div>\n    <div>\n      <label for=\"valor\">Valor:</label>\n      <input type=\"text\" v-model=\"valor\" id=\"valor\">\n    </div>\n    <div>\n      <label for=\"cidade\">Cidade:</label>\n      <input type=\"text\" v-model=\"cidade\" id=\"cidade\">\n    </div>\n    <div>\n      <label for=\"txtId\">Texto ID:</label>\n      <input type=\"text\" v-model=\"txtId\" id=\"txtId\">\n    </div>\n    <button @click=\"gerarPayload\">Gerar Payload e QR Code</button>\n    <div>\n      <img v-if=\"qrcode\" :src=\"qrcode\" alt=\"QR Code PIX\">\n    </div>\n  </div>\n</template>\n\n<script>\nimport crc from 'crc';\nimport QRCode from 'qrcode-generator';\n\nexport default {\n  \n  name: 'HomeView',\n\n  data() {\n    return {\n      nome: '',\n      chavepix: '',\n      valor: '',\n      cidade: '',\n      txtId: '',\n      qrcode: null,\n    };\n  },\n  methods: {\n    gerarPayload() {\n      const valorFloat = parseFloat(this.valor.replace(',', '.')).toFixed(2);\n\n      const merchantAccount = `26${(14 + this.chavepix.length).toString().padStart(2, '0')}${this.chavepix}`;\n      const transactionAmount = `54${(2 + valorFloat.length).toString().padStart(2, '0')}${valorFloat}`;\n      const addDataField = `62${(2 + this.txtId.length).toString().padStart(2, '0')}${this.txtId}`;\n      const nome_tam = `59${(2 + this.nome.length).toString().padStart(2, '0')}${this.nome}`;\n      const cidade_tam = `60${(2 + this.cidade.length).toString().padStart(2, '0')}${this.cidade}`;\n\n      const payload = `000201${merchantAccount}520400005303986${transactionAmount}5802BR${nome_tam}${cidade_tam}${addDataField}6304`;\n\n      // Calcular o CRC-16 usando a biblioteca 'crc'\n      const crc16Code = crc.crc16xmodem(Buffer.from(payload, 'utf-8')).toString(16).toUpperCase().padStart(4, '0');\n\n      const payload_completa = `${payload}${crc16Code}`;\n\n      // Gerar o QR Code usando a biblioteca 'qrcode-generator'\n      const qrcode = QRCode(0, 'L'); // Configurar o tipo de QR Code e nível de correção\n      qrcode.addData(payload_completa);\n      qrcode.make();\n\n      // Obter a imagem do QR Code em formato base64\n      const qrCodeImage = qrcode.createDataURL(4); // Use 4 para obter uma imagem maior\n\n      this.qrcode = qrCodeImage;\n    },\n  },\n\n}\n</script>\n"],"mappings":"AA+BA,OAAOA,GAAE,MAAO,KAAK;AACrB,OAAOC,MAAK,MAAO,kBAAkB;AAErC,eAAe;EAEbC,IAAI,EAAE,UAAU;EAEhBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,MAAMC,UAAS,GAAIC,UAAU,CAAC,IAAI,CAACP,KAAK,CAACQ,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;MAEtE,MAAMC,eAAc,GAAK,KAAI,CAAC,EAAC,GAAI,IAAI,CAACX,QAAQ,CAACY,MAAM,EAAEC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,GAAE,IAAI,CAACd,QAAS,EAAC;MACtG,MAAMe,iBAAgB,GAAK,KAAI,CAAC,IAAIR,UAAU,CAACK,MAAM,EAAEC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,GAAEP,UAAW,EAAC;MACjG,MAAMS,YAAW,GAAK,KAAI,CAAC,IAAI,IAAI,CAACb,KAAK,CAACS,MAAM,EAAEC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,GAAE,IAAI,CAACX,KAAM,EAAC;MAC5F,MAAMc,QAAO,GAAK,KAAI,CAAC,IAAI,IAAI,CAAClB,IAAI,CAACa,MAAM,EAAEC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,GAAE,IAAI,CAACf,IAAK,EAAC;MACtF,MAAMmB,UAAS,GAAK,KAAI,CAAC,IAAI,IAAI,CAAChB,MAAM,CAACU,MAAM,EAAEC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,GAAE,IAAI,CAACZ,MAAO,EAAC;MAE5F,MAAMiB,OAAM,GAAK,SAAQR,eAAgB,kBAAiBI,iBAAkB,SAAQE,QAAS,GAAEC,UAAW,GAAEF,YAAa,MAAK;;MAE9H;MACA,MAAMI,SAAQ,GAAIzB,GAAG,CAAC0B,WAAW,CAACC,MAAM,CAACC,IAAI,CAACJ,OAAO,EAAE,OAAO,CAAC,CAAC,CAACN,QAAQ,CAAC,EAAE,CAAC,CAACW,WAAW,CAAC,CAAC,CAACV,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAE5G,MAAMW,gBAAe,GAAK,GAAEN,OAAQ,GAAEC,SAAU,EAAC;;MAEjD;MACA,MAAMhB,MAAK,GAAIR,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;MAC/BQ,MAAM,CAACsB,OAAO,CAACD,gBAAgB,CAAC;MAChCrB,MAAM,CAACuB,IAAI,CAAC,CAAC;;MAEb;MACA,MAAMC,WAAU,GAAIxB,MAAM,CAACyB,aAAa,CAAC,CAAC,CAAC,EAAE;;MAE7C,IAAI,CAACzB,MAAK,GAAIwB,WAAW;IAC3B;EACF;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}