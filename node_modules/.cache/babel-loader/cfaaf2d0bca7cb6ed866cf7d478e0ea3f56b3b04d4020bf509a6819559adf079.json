{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"PIX Payload Generator\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createCommentVNode(\" Seus campos de entrada aqui \")], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"Payload Completa:\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _hoisted_2, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.gerarPayload && $options.gerarPayload(...args))\n  }, \"Gerar Payload\"), $data.payloadCompleta ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"pre\", null, _toDisplayString($data.payloadCompleta), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","_createCommentVNode","_createElementBlock","_hoisted_1","_hoisted_2","onClick","_cache","args","$options","gerarPayload","$data","payloadCompleta","_hoisted_3","_hoisted_4","_toDisplayString"],"sources":["C:\\Users\\11\\Desktop\\teste-pix.js\\teste-pix.js\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <h3>PIX Payload Generator</h3>\n    <div>\n      <!-- Seus campos de entrada aqui -->\n    </div>\n    <button @click=\"gerarPayload\">Gerar Payload</button>\n    <div v-if=\"payloadCompleta\">\n      <h4>Payload Completa:</h4>\n      <pre>{{ payloadCompleta }}</pre>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport crc from 'crc';\nimport QRCode from 'qrcode-generator';\n\nexport default {\n  data() {\n    return {\n      nome: '',\n      chavepix: '',\n      valor: '',\n      cidade: '',\n      txtId: '',\n      payloadFormat: '000201',\n      merchantCategCode: '52040000',\n      transactionCurrency: '5303986',\n      countryCode: '5802BR',\n      crc16: '6304',\n      payloadCompleta: '',\n    };\n  },\n  methods: {\n    gerarPayload() {\n      const valorFloat = parseFloat(this.valor.replace(',', '.')).toFixed(2);\n      this.nome_tam = this.nome.length.toString().padStart(2, '0');\n      this.chavepix_tam = this.chavepix.length.toString().padStart(2, '0');\n      this.valor_tam = this.valor.length.toString().padStart(2, '0');\n      this.cidade_tam = this.cidade.length.toString().padStart(2, '0');\n      this.txtId_tam = this.txtId.length.toString().padStart(2, '0');\n\n      this.merchantAccount_tam = `0014BR.GOV.BCB.PIX01${this.chavepix_tam}${this.chavepix}`;\n      this.transactionAmount_tam = `${this.valor_tam}${parseFloat(this.valor).toFixed(2)}`;\n      this.addDataField_tam = `05${this.txtId_tam}${this.txtId}`;\n\n      this.nome_tam = `59${this.nome_tam}${this.nome}`;\n      this.cidade_tam = `60${this.cidade_tam}${this.cidade}`;\n\n      this.merchantAccount = `26${(14 + this.chavepix.length).toString().padStart(2, '0')}${this.chavepix}`;\n      this.transactionAmount = `54${(2 + valorFloat.length).toString().padStart(2, '0')}${valorFloat}`;\n      this.merchantName = `59${this.nome_tam}`;\n      this.merchantCity = `60${this.cidade_tam}`;\n      this.addDataField = `62${(2 + this.txtId_tam).toString().padStart(2, '0')}${this.addDataField_tam}`;\n\n      const payload = `${this.payloadFormat}${this.merchantAccount}${this.merchantCategCode}${this.transactionCurrency}${this.transactionAmount}${this.countryCode}${this.merchantName}${this.merchantCity}${this.addDataField}${this.crc16}`;\n      this.payloadCompleta = gerarCrc16(payload);\n    },\n    gerarCrc16(payload) {\n      function calcularCrc16(data) {\n        const poly = 0x11021;\n        let crc = 0xFFFF;\n\n        for (let i = 0; i < data.length; i++) {\n          crc ^= (data.charCodeAt(i) << 8);\n\n          for (let j = 0; j < 8; j++) {\n            if (crc & 0x8000) {\n              crc = (crc << 1) ^ poly;\n            } else {\n              crc <<= 1;\n            }\n          }\n        }\n\n        return crc & 0xFFFF;\n      }\n\n      const crc16 = calcularCrc16(payload);\n      const crc16Code_formatado = crc16.toString(16).toUpperCase().padStart(4, '0');\n      return `${payload}${crc16Code_formatado}`;\n    },\n  },\n  \n};\n</script>\n"],"mappings":";gCAEIA,mBAAA,CAA8B,YAA1B,uBAAqB;gCACzBA,mBAAA,CAEM,c,aADJC,mBAAA,iCAAoC,C;;;;gCAIpCD,mBAAA,CAA0B,YAAtB,mBAAiB;;;uBAPzBE,mBAAA,CAUM,cATJC,UAA8B,EAC9BC,UAEM,EACNJ,mBAAA,CAAoD;IAA3CK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;KAAE,eAAa,GAChCG,KAAA,CAAAC,eAAe,I,cAA1BT,mBAAA,CAGM,OAAAU,UAAA,GAFJC,UAA0B,EAC1Bb,mBAAA,CAAgC,aAAAc,gBAAA,CAAxBJ,KAAA,CAAAC,eAAe,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}