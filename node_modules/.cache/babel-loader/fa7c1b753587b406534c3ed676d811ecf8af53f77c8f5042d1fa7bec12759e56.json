{"ast":null,"code":"import _defineProperty from \"C:/Users/11/Desktop/teste-pix.js/teste-pix.js/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n// Define a classe Payload\nclass Payload {\n  // Construtor da classe\n  constructor() {\n    this.pixKey = '';\n    this.description = '';\n    this.merchantName = '';\n    this.merchantCity = '';\n    this.txid = '';\n    this.amount = '';\n    this.uniquePayment = false;\n    this.url = '';\n  }\n\n  // Define o valor de pixKey\n  setPixKey(pixKey) {\n    this.pixKey = pixKey;\n    return this;\n  }\n\n  // Define o valor de uniquePayment\n  setUniquePayment(uniquePayment) {\n    this.uniquePayment = uniquePayment;\n    return this;\n  }\n\n  // Define o valor de url\n  setUrl(url) {\n    this.url = url;\n    return this;\n  }\n\n  // Define o valor de description\n  setDescription(description) {\n    this.description = description;\n    return this;\n  }\n\n  // Define o valor de merchantName\n  setMerchantName(merchantName) {\n    this.merchantName = merchantName;\n    return this;\n  }\n\n  // Define o valor de merchantCity\n  setMerchantCity(merchantCity) {\n    this.merchantCity = merchantCity;\n    return this;\n  }\n\n  // Define o valor de txid\n  setTxid(txid) {\n    this.txid = txid;\n    return this;\n  }\n\n  // Define o valor de amount\n  setAmount(amount) {\n    this.amount = amount.toFixed(2);\n    return this;\n  }\n\n  // Retorna o valor completo de um objeto do payload\n  getValue(id, value) {\n    const size = value.length.toString().padStart(2, '0');\n    return id + size + value;\n  }\n\n  // Retorna os valores completos da informação da conta\n  getMerchantAccountInformation() {\n    // DOMÍNIO DO BANCO\n    const gui = this.getValue(Payload.ID_MERCHANT_ACCOUNT_INFORMATION_GUI, 'br.gov.bcb.pix');\n\n    // CHAVE PIX\n    const key = this.pixKey.length > 0 ? this.getValue(Payload.ID_MERCHANT_ACCOUNT_INFORMATION_KEY, this.pixKey) : '';\n\n    // DESCRIÇÃO DO PAGAMENTO\n    const description = this.description.length > 0 ? this.getValue(Payload.ID_MERCHANT_ACCOUNT_INFORMATION_DESCRIPTION, this.description) : '';\n\n    // URL DO QR CODE DINÂMICO\n    const url = this.url.length > 0 ? this.getValue(Payload.ID_MERCHANT_ACCOUNT_INFORMATION_URL, this.url.replace(/^https?:\\/\\//, '')) : '';\n\n    // VALOR COMPLETO DA CONTA\n    return this.getValue(Payload.ID_MERCHANT_ACCOUNT_INFORMATION, gui + key + description + url);\n  }\n\n  // Retorna os valores completos do campo adicional do pix (TXID)\n  getAdditionalDataFieldTemplate() {\n    // TXID\n    const txid = this.getValue(Payload.ID_ADDITIONAL_DATA_FIELD_TEMPLATE_TXID, this.txid);\n\n    // RETORNA O VALOR COMPLETO\n    return this.getValue(Payload.ID_ADDITIONAL_DATA_FIELD_TEMPLATE, txid);\n  }\n\n  // Retorna o valor do ID_POINT_OF_INITIATION_METHOD\n  getUniquePayment() {\n    return this.uniquePayment ? this.getValue(Payload.ID_POINT_OF_INITIATION_METHOD, '12') : '';\n  }\n\n  // Gera o código completo do payload Pix\n  getPayload() {\n    // CRIA O PAYLOAD\n    const payload = this.getValue(Payload.ID_PAYLOAD_FORMAT_INDICATOR, '01') + this.getUniquePayment() + this.getMerchantAccountInformation() + this.getValue(Payload.ID_MERCHANT_CATEGORY_CODE, '0000') + this.getValue(Payload.ID_TRANSACTION_CURRENCY, '986') + this.getValue(Payload.ID_TRANSACTION_AMOUNT, this.amount) + this.getValue(Payload.ID_COUNTRY_CODE, 'BR') + this.getValue(Payload.ID_MERCHANT_NAME, this.merchantName) + this.getValue(Payload.ID_MERCHANT_CITY, this.merchantCity) + this.getAdditionalDataFieldTemplate();\n\n    // RETORNA O PAYLOAD + CRC16\n    return payload + this.getCRC16(payload);\n  }\n\n  // Calcula o valor da hash de validação do código pix\n  getCRC16(payload) {\n    // ADICIONA DADOS GERAIS NO PAYLOAD\n    payload += Payload.ID_CRC16 + '04';\n\n    // DADOS DEFINIDOS PELO BACEN\n    const polinomio = 0x1021;\n    let resultado = 0xFFFF;\n\n    // CHECKSUM\n    if (payload.length > 0) {\n      for (let offset = 0; offset < payload.length; offset++) {\n        resultado ^= payload.charCodeAt(offset) << 8;\n        for (let bitwise = 0; bitwise < 8; bitwise++) {\n          if ((resultado <<= 1) & 0x10000) {\n            resultado ^= polinomio;\n          }\n          resultado &= 0xFFFF;\n        }\n      }\n    }\n\n    // RETORNA CÓDIGO CRC16 DE 4 CARACTERES\n    return Payload.ID_CRC16 + '04' + resultado.toString(16).toUpperCase().padStart(4, '0');\n  }\n}\n// IDs do Payload do Pix\n_defineProperty(Payload, \"ID_PAYLOAD_FORMAT_INDICATOR\", '00');\n_defineProperty(Payload, \"ID_POINT_OF_INITIATION_METHOD\", '01');\n_defineProperty(Payload, \"ID_MERCHANT_ACCOUNT_INFORMATION\", '26');\n_defineProperty(Payload, \"ID_MERCHANT_ACCOUNT_INFORMATION_GUI\", '00');\n_defineProperty(Payload, \"ID_MERCHANT_ACCOUNT_INFORMATION_KEY\", '01');\n_defineProperty(Payload, \"ID_MERCHANT_ACCOUNT_INFORMATION_DESCRIPTION\", '02');\n_defineProperty(Payload, \"ID_MERCHANT_ACCOUNT_INFORMATION_URL\", '25');\n_defineProperty(Payload, \"ID_MERCHANT_CATEGORY_CODE\", '52');\n_defineProperty(Payload, \"ID_TRANSACTION_CURRENCY\", '53');\n_defineProperty(Payload, \"ID_TRANSACTION_AMOUNT\", '54');\n_defineProperty(Payload, \"ID_COUNTRY_CODE\", '58');\n_defineProperty(Payload, \"ID_MERCHANT_NAME\", '59');\n_defineProperty(Payload, \"ID_MERCHANT_CITY\", '60');\n_defineProperty(Payload, \"ID_ADDITIONAL_DATA_FIELD_TEMPLATE\", '62');\n_defineProperty(Payload, \"ID_ADDITIONAL_DATA_FIELD_TEMPLATE_TXID\", '05');\n_defineProperty(Payload, \"ID_CRC16\", '63');\nexport default {\n  data() {\n    return {\n      formData: {\n        pixKey: '',\n        amount: 0,\n        uniquePayment: false,\n        merchantName: '',\n        merchantCity: '',\n        txid: ''\n      },\n      payloadGenerated: null\n    };\n  },\n  methods: {\n    generatePayload() {\n      // Crie uma instância da classe Payload e configure os dados a partir do formulário\n      const payload = new Payload();\n      payload.setPixKey(this.formData.pixKey).setAmount(this.formData.amount).setUniquePayment(this.formData.uniquePayment).setMerchantName(this.formData.merchantName).setMerchantCity(this.formData.merchantCity).setTxid(this.formData.txid);\n\n      // Gere o payload Pix\n      const generatedPayload = payload.getPayload();\n\n      // Atualize o estado para exibir o payload gerado\n      this.payloadGenerated = generatedPayload;\n    }\n  }\n};","map":{"version":3,"names":["Payload","constructor","pixKey","description","merchantName","merchantCity","txid","amount","uniquePayment","url","setPixKey","setUniquePayment","setUrl","setDescription","setMerchantName","setMerchantCity","setTxid","setAmount","toFixed","getValue","id","value","size","length","toString","padStart","getMerchantAccountInformation","gui","ID_MERCHANT_ACCOUNT_INFORMATION_GUI","key","ID_MERCHANT_ACCOUNT_INFORMATION_KEY","ID_MERCHANT_ACCOUNT_INFORMATION_DESCRIPTION","ID_MERCHANT_ACCOUNT_INFORMATION_URL","replace","ID_MERCHANT_ACCOUNT_INFORMATION","getAdditionalDataFieldTemplate","ID_ADDITIONAL_DATA_FIELD_TEMPLATE_TXID","ID_ADDITIONAL_DATA_FIELD_TEMPLATE","getUniquePayment","ID_POINT_OF_INITIATION_METHOD","getPayload","payload","ID_PAYLOAD_FORMAT_INDICATOR","ID_MERCHANT_CATEGORY_CODE","ID_TRANSACTION_CURRENCY","ID_TRANSACTION_AMOUNT","ID_COUNTRY_CODE","ID_MERCHANT_NAME","ID_MERCHANT_CITY","getCRC16","ID_CRC16","polinomio","resultado","offset","charCodeAt","bitwise","toUpperCase","_defineProperty","data","formData","payloadGenerated","methods","generatePayload","generatedPayload"],"sources":["C:\\Users\\11\\Desktop\\teste-pix.js\\teste-pix.js\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Gerador de Payload Pix</h1>\n\n    <!-- Formulário para inserir informações -->\n    <form @submit.prevent=\"generatePayload\">\n      <label for=\"pixKey\">Chave Pix:</label>\n      <input type=\"text\" id=\"pixKey\" v-model=\"formData.pixKey\" required>\n\n      <label for=\"amount\">Valor:</label>\n      <input type=\"number\" id=\"amount\" v-model=\"formData.amount\" required>\n\n      <label for=\"uniquePayment\">Pagamento único:</label>\n      <input type=\"checkbox\" id=\"uniquePayment\" v-model=\"formData.uniquePayment\">\n\n      <label for=\"merchantName\">Nome do titular:</label>\n      <input type=\"text\" id=\"merchantName\" v-model=\"formData.merchantName\" required>\n\n      <label for=\"merchantCity\">Cidade do titular:</label>\n      <input type=\"text\" id=\"merchantCity\" v-model=\"formData.merchantCity\" required>\n\n      <label for=\"txid\">ID da transação:</label>\n      <input type=\"text\" id=\"txid\" v-model=\"formData.txid\" required>\n\n      <button type=\"submit\">Gerar Payload</button>\n    </form>\n\n    <!-- Exibição do Payload Pix gerado -->\n    <div v-if=\"payloadGenerated\">\n      <h2>Payload Pix Gerado:</h2>\n      <pre>{{ payloadGenerated }}</pre>\n    </div>\n  </div>\n</template>\n\n<script>\n// Define a classe Payload\nclass Payload {\n  // IDs do Payload do Pix\n  static ID_PAYLOAD_FORMAT_INDICATOR = '00';\n  static ID_POINT_OF_INITIATION_METHOD = '01';\n  static ID_MERCHANT_ACCOUNT_INFORMATION = '26';\n  static ID_MERCHANT_ACCOUNT_INFORMATION_GUI = '00';\n  static ID_MERCHANT_ACCOUNT_INFORMATION_KEY = '01';\n  static ID_MERCHANT_ACCOUNT_INFORMATION_DESCRIPTION = '02';\n  static ID_MERCHANT_ACCOUNT_INFORMATION_URL = '25';\n  static ID_MERCHANT_CATEGORY_CODE = '52';\n  static ID_TRANSACTION_CURRENCY = '53';\n  static ID_TRANSACTION_AMOUNT = '54';\n  static ID_COUNTRY_CODE = '58';\n  static ID_MERCHANT_NAME = '59';\n  static ID_MERCHANT_CITY = '60';\n  static ID_ADDITIONAL_DATA_FIELD_TEMPLATE = '62';\n  static ID_ADDITIONAL_DATA_FIELD_TEMPLATE_TXID = '05';\n  static ID_CRC16 = '63';\n\n  // Construtor da classe\n  constructor() {\n    this.pixKey = '';\n    this.description = '';\n    this.merchantName = '';\n    this.merchantCity = '';\n    this.txid = '';\n    this.amount = '';\n    this.uniquePayment = false;\n    this.url = '';\n  }\n\n  // Define o valor de pixKey\n  setPixKey(pixKey) {\n    this.pixKey = pixKey;\n    return this;\n  }\n\n  // Define o valor de uniquePayment\n  setUniquePayment(uniquePayment) {\n    this.uniquePayment = uniquePayment;\n    return this;\n  }\n\n  // Define o valor de url\n  setUrl(url) {\n    this.url = url;\n    return this;\n  }\n\n  // Define o valor de description\n  setDescription(description) {\n    this.description = description;\n    return this;\n  }\n\n  // Define o valor de merchantName\n  setMerchantName(merchantName) {\n    this.merchantName = merchantName;\n    return this;\n  }\n\n  // Define o valor de merchantCity\n  setMerchantCity(merchantCity) {\n    this.merchantCity = merchantCity;\n    return this;\n  }\n\n  // Define o valor de txid\n  setTxid(txid) {\n    this.txid = txid;\n    return this;\n  }\n\n  // Define o valor de amount\n  setAmount(amount) {\n    this.amount = amount.toFixed(2);\n    return this;\n  }\n\n  // Retorna o valor completo de um objeto do payload\n  getValue(id, value) {\n    const size = value.length.toString().padStart(2, '0');\n    return id + size + value;\n  }\n\n  // Retorna os valores completos da informação da conta\n  getMerchantAccountInformation() {\n    // DOMÍNIO DO BANCO\n    const gui = this.getValue(\n      Payload.ID_MERCHANT_ACCOUNT_INFORMATION_GUI,\n      'br.gov.bcb.pix'\n    );\n\n    // CHAVE PIX\n    const key =\n      this.pixKey.length > 0\n        ? this.getValue(Payload.ID_MERCHANT_ACCOUNT_INFORMATION_KEY, this.pixKey)\n        : '';\n\n    // DESCRIÇÃO DO PAGAMENTO\n    const description =\n      this.description.length > 0\n        ? this.getValue(\n            Payload.ID_MERCHANT_ACCOUNT_INFORMATION_DESCRIPTION,\n            this.description\n          )\n        : '';\n\n    // URL DO QR CODE DINÂMICO\n    const url =\n      this.url.length > 0\n        ? this.getValue(\n            Payload.ID_MERCHANT_ACCOUNT_INFORMATION_URL,\n            this.url.replace(/^https?:\\/\\//, '')\n          )\n        : '';\n\n    // VALOR COMPLETO DA CONTA\n    return this.getValue(\n      Payload.ID_MERCHANT_ACCOUNT_INFORMATION,\n      gui + key + description + url\n    );\n  }\n\n  // Retorna os valores completos do campo adicional do pix (TXID)\n  getAdditionalDataFieldTemplate() {\n    // TXID\n    const txid = this.getValue(\n      Payload.ID_ADDITIONAL_DATA_FIELD_TEMPLATE_TXID,\n      this.txid\n    );\n\n    // RETORNA O VALOR COMPLETO\n    return this.getValue(\n      Payload.ID_ADDITIONAL_DATA_FIELD_TEMPLATE,\n      txid\n    );\n  }\n\n  // Retorna o valor do ID_POINT_OF_INITIATION_METHOD\n  getUniquePayment() {\n    return this.uniquePayment\n      ? this.getValue(Payload.ID_POINT_OF_INITIATION_METHOD, '12')\n      : '';\n  }\n\n  // Gera o código completo do payload Pix\n  getPayload() {\n    // CRIA O PAYLOAD\n    const payload =\n      this.getValue(Payload.ID_PAYLOAD_FORMAT_INDICATOR, '01') +\n      this.getUniquePayment() +\n      this.getMerchantAccountInformation() +\n      this.getValue(Payload.ID_MERCHANT_CATEGORY_CODE, '0000') +\n      this.getValue(Payload.ID_TRANSACTION_CURRENCY, '986') +\n      this.getValue(Payload.ID_TRANSACTION_AMOUNT, this.amount) +\n      this.getValue(Payload.ID_COUNTRY_CODE, 'BR') +\n      this.getValue(Payload.ID_MERCHANT_NAME, this.merchantName) +\n      this.getValue(Payload.ID_MERCHANT_CITY, this.merchantCity) +\n      this.getAdditionalDataFieldTemplate();\n\n    // RETORNA O PAYLOAD + CRC16\n    return payload + this.getCRC16(payload);\n  }\n\n  // Calcula o valor da hash de validação do código pix\n  getCRC16(payload) {\n    // ADICIONA DADOS GERAIS NO PAYLOAD\n    payload += Payload.ID_CRC16 + '04';\n\n    // DADOS DEFINIDOS PELO BACEN\n    const polinomio = 0x1021;\n    let resultado = 0xFFFF;\n\n    // CHECKSUM\n    if (payload.length > 0) {\n      for (let offset = 0; offset < payload.length; offset++) {\n        resultado ^= (payload.charCodeAt(offset) << 8);\n        for (let bitwise = 0; bitwise < 8; bitwise++) {\n          if (((resultado <<= 1) & 0x10000)) {\n            resultado ^= polinomio;\n          }\n          resultado &= 0xFFFF;\n        }\n      }\n    }\n\n    // RETORNA CÓDIGO CRC16 DE 4 CARACTERES\n    return (\n      Payload.ID_CRC16 + '04' + resultado.toString(16).toUpperCase().padStart(4, '0')\n    );\n  }\n}\n\nexport default {\n  data() {\n    return {\n      formData: {\n        pixKey: '',\n        amount: 0,\n        uniquePayment: false,\n        merchantName: '',\n        merchantCity: '',\n        txid: '',\n      },\n      payloadGenerated: null,\n    };\n  },\n  methods: {\n    generatePayload() {\n      // Crie uma instância da classe Payload e configure os dados a partir do formulário\n      const payload = new Payload();\n      payload\n        .setPixKey(this.formData.pixKey)\n        .setAmount(this.formData.amount)\n        .setUniquePayment(this.formData.uniquePayment)\n        .setMerchantName(this.formData.merchantName)\n        .setMerchantCity(this.formData.merchantCity)\n        .setTxid(this.formData.txid);\n\n      // Gere o payload Pix\n      const generatedPayload = payload.getPayload();\n\n      // Atualize o estado para exibir o payload gerado\n      this.payloadGenerated = generatedPayload;\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Adicione estilos CSS conforme necessário */\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}