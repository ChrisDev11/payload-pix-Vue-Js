{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\n// Importe as bibliotecas necessárias no início do seu script\nimport crc from 'crc';\nimport QRCode from 'qrcode-generator';\n\n// Defina a função gerarQrCode\nfunction gerarQrCode(payload, diretorio) {\n  // Código para gerar o QR Code usando a biblioteca 'qrcode-generator'\n  const typeNumber = 4;\n  const errorCorrectionLevel = 'L';\n  const qr = QRCode(typeNumber, errorCorrectionLevel);\n  qr.addData(payload);\n  qr.make();\n\n  // Salvar o QR Code no diretório especificado\n  const dir = os.path.expanduser(diretorio);\n  const qrCodeDataUrl = qr.createDataURL();\n  const img = new Image();\n  img.src = qrCodeDataUrl;\n  img.onload = () => {\n    const canvas = document.createElement('canvas');\n    canvas.width = qr.getModuleCount() * 10;\n    canvas.height = qr.getModuleCount() * 10;\n    const context = canvas.getContext('2d');\n    context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    canvas.toBlob(blob => {\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'qrcode.png';\n      link.click();\n      URL.revokeObjectURL(url);\n    });\n  };\n}\n\n// Defina a função gerarCrc16 fora do objeto Vue\nfunction gerarCrc16(payload) {\n  // Função para calcular o CRC-16\n  function calcularCrc16(data) {\n    const poly = 0x11021;\n    let crc = 0xFFFF;\n    for (let i = 0; i < data.length; i++) {\n      crc ^= data.charCodeAt(i) << 8;\n      for (let j = 0; j < 8; j++) {\n        if (crc & 0x8000) {\n          crc = crc << 1 ^ poly;\n        } else {\n          crc <<= 1;\n        }\n      }\n    }\n    return crc & 0xFFFF;\n  }\n\n  // Calcula o CRC-16\n  const crc16 = calcularCrc16(payload);\n\n  // Formata o código CRC-16 como uma string hexadecimal de 4 caracteres\n  const crc16Code_formatado = crc16.toString(16).toUpperCase().padStart(4, '0');\n\n  // Concatena o código CRC-16 à payload\n  const payload_completa = `${payload}${crc16Code_formatado}`;\n\n  // Chama a função para gerar o QR Code\n  // Certifique-se de que a função gerarQrCode esteja definida e acessível neste escopo.\n  gerarQrCode(payload_completa, this.diretorioQrCode); // Note que usamos \"this\" para acessar propriedades do Vue\n}\n\nexport default {\n  data() {\n    return {\n      nome: '',\n      chavepix: '',\n      valor: '',\n      cidade: '',\n      txtId: '',\n      diretorioQrCode: '',\n      payloadFormat: '000201',\n      merchantCategCode: '52040000',\n      transactionCurrency: '5303986',\n      countryCode: '5802BR',\n      crc16: '6304',\n      payloadCompleta: '' // Define payloadCompleta as a data property\n    };\n  },\n\n  methods: {\n    gerarPayload() {\n      const valorFloat = parseFloat(this.valor.replace(',', '.')).toFixed(2);\n      this.nome_tam = this.nome.length.toString().padStart(2, '0');\n      this.chavepix_tam = this.chavepix.length.toString().padStart(2, '0');\n      this.valor_tam = this.valor.length.toString().padStart(2, '0');\n      this.cidade_tam = this.cidade.length.toString().padStart(2, '0');\n      this.txtId_tam = this.txtId.length.toString().padStart(2, '0');\n      this.merchantAccount_tam = `0014BR.GOV.BCB.PIX01${this.chavepix_tam}${this.chavepix}`;\n      this.transactionAmount_tam = `${this.valor_tam}${parseFloat(this.valor).toFixed(2)}`;\n      this.addDataField_tam = `05${this.txtId_tam}${this.txtId}`;\n      this.nome_tam = `59${this.nome_tam}${this.nome}`;\n      this.cidade_tam = `60${this.cidade_tam}${this.cidade}`;\n      this.merchantAccount = `26${(14 + this.chavepix.length).toString().padStart(2, '0')}${this.chavepix}`;\n      this.transactionAmount = `54${(2 + valorFloat.length).toString().padStart(2, '0')}${valorFloat}`;\n      this.merchantName = `59${this.nome_tam}`;\n      this.merchantCity = `60${this.cidade_tam}`;\n      this.addDataField = `62${(2 + this.txtId_tam).toString().padStart(2, '0')}${this.addDataField_tam}`;\n      const payload = `${this.payloadFormat}${this.merchantAccount}${this.merchantCategCode}${this.transactionCurrency}${this.transactionAmount}${this.countryCode}${this.merchantName}${this.merchantCity}${this.addDataField}${this.crc16}`;\n      this.payloadCompleta = gerarCrc16(payload); // Use a função gerarCrc16 sem \"this\"\n      gerarQrCode(this.payloadCompleta, this.diretorioQrCode);\n    }\n  }\n};","map":{"version":3,"names":["crc","QRCode","gerarQrCode","payload","diretorio","typeNumber","errorCorrectionLevel","qr","addData","make","dir","os","path","expanduser","qrCodeDataUrl","createDataURL","img","Image","src","onload","canvas","document","createElement","width","getModuleCount","height","context","getContext","drawImage","toBlob","blob","url","URL","createObjectURL","link","href","download","click","revokeObjectURL","gerarCrc16","calcularCrc16","data","poly","i","length","charCodeAt","j","crc16","crc16Code_formatado","toString","toUpperCase","padStart","payload_completa","diretorioQrCode","nome","chavepix","valor","cidade","txtId","payloadFormat","merchantCategCode","transactionCurrency","countryCode","payloadCompleta","methods","gerarPayload","valorFloat","parseFloat","replace","toFixed","nome_tam","chavepix_tam","valor_tam","cidade_tam","txtId_tam","merchantAccount_tam","transactionAmount_tam","addDataField_tam","merchantAccount","transactionAmount","merchantName","merchantCity","addDataField"],"sources":["C:\\Users\\11\\Desktop\\teste-pix.js\\teste-pix.js\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <h3>PIX Payload Generator</h3>\n    <div>\n      <label for=\"nome\">Nome:</label>\n      <input type=\"text\" v-model=\"nome\" id=\"nome\">\n    </div>\n    <div>\n      <label for=\"chavepix\">Chave PIX:</label>\n      <input type=\"text\" v-model=\"chavepix\" id=\"chavepix\">\n    </div>\n    <div>\n      <label for=\"valor\">Valor:</label>\n      <input type=\"text\" v-model=\"valor\" id=\"valor\">\n    </div>\n    <div>\n      <label for=\"cidade\">Cidade:</label>\n      <input type=\"text\" v-model=\"cidade\" id=\"cidade\">\n    </div>\n    <div>\n      <label for=\"txtId\">Texto ID:</label>\n      <input type=\"text\" v-model=\"txtId\" id=\"txtId\">\n    </div>\n    <button @click=\"gerarPayload\">Gerar Payload e QR Code</button>\n    <div>\n      <img v-if=\"qrcode\" :src=\"qrcode\" alt=\"QR Code PIX\">\n    </div>\n    <div v-if=\"payloadCompleta\">\n      <h4>Payload Completa:</h4>\n      <pre>{{ payloadCompleta }}</pre>\n    </div>\n  </div>\n</template>\n\n<script>\n// Importe as bibliotecas necessárias no início do seu script\nimport crc from 'crc';\nimport QRCode from 'qrcode-generator';\n\n// Defina a função gerarQrCode\nfunction gerarQrCode(payload, diretorio) {\n  // Código para gerar o QR Code usando a biblioteca 'qrcode-generator'\n  const typeNumber = 4;\n  const errorCorrectionLevel = 'L';\n  const qr = QRCode(typeNumber, errorCorrectionLevel);\n  qr.addData(payload);\n  qr.make();\n\n  // Salvar o QR Code no diretório especificado\n  const dir = os.path.expanduser(diretorio);\n  const qrCodeDataUrl = qr.createDataURL();\n  const img = new Image();\n  img.src = qrCodeDataUrl;\n  img.onload = () => {\n    const canvas = document.createElement('canvas');\n    canvas.width = qr.getModuleCount() * 10;\n    canvas.height = qr.getModuleCount() * 10;\n    const context = canvas.getContext('2d');\n    context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    canvas.toBlob((blob) => {\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'qrcode.png';\n      link.click();\n      URL.revokeObjectURL(url);\n    });\n  };\n}\n\n// Defina a função gerarCrc16 fora do objeto Vue\nfunction gerarCrc16(payload) {\n  // Função para calcular o CRC-16\n  function calcularCrc16(data) {\n    const poly = 0x11021;\n    let crc = 0xFFFF;\n\n    for (let i = 0; i < data.length; i++) {\n      crc ^= (data.charCodeAt(i) << 8);\n\n      for (let j = 0; j < 8; j++) {\n        if (crc & 0x8000) {\n          crc = (crc << 1) ^ poly;\n        } else {\n          crc <<= 1;\n        }\n      }\n    }\n\n    return crc & 0xFFFF;\n  }\n  \n\n  // Calcula o CRC-16\n  const crc16 = calcularCrc16(payload);\n\n  // Formata o código CRC-16 como uma string hexadecimal de 4 caracteres\n  const crc16Code_formatado = crc16.toString(16).toUpperCase().padStart(4, '0');\n\n  // Concatena o código CRC-16 à payload\n  const payload_completa = `${payload}${crc16Code_formatado}`;\n\n  // Chama a função para gerar o QR Code\n  // Certifique-se de que a função gerarQrCode esteja definida e acessível neste escopo.\n  gerarQrCode(payload_completa, this.diretorioQrCode); // Note que usamos \"this\" para acessar propriedades do Vue\n}\n\nexport default {\n  data() {\n    return {\n      nome: '',\n      chavepix: '',\n      valor: '',\n      cidade: '',\n      txtId: '',\n      diretorioQrCode: '',\n      payloadFormat: '000201',\n      merchantCategCode: '52040000',\n      transactionCurrency: '5303986',\n      countryCode: '5802BR',\n      crc16: '6304',\n      payloadCompleta: '' // Define payloadCompleta as a data property\n    };\n  },\n  methods: {\n    gerarPayload() {\n      const valorFloat = parseFloat(this.valor.replace(',', '.')).toFixed(2);\n      this.nome_tam = this.nome.length.toString().padStart(2, '0');\n      this.chavepix_tam = this.chavepix.length.toString().padStart(2, '0');\n      this.valor_tam = this.valor.length.toString().padStart(2, '0');\n      this.cidade_tam = this.cidade.length.toString().padStart(2, '0');\n      this.txtId_tam = this.txtId.length.toString().padStart(2, '0');\n\n      this.merchantAccount_tam = `0014BR.GOV.BCB.PIX01${this.chavepix_tam}${this.chavepix}`;\n      this.transactionAmount_tam = `${this.valor_tam}${parseFloat(this.valor).toFixed(2)}`;\n      this.addDataField_tam = `05${this.txtId_tam}${this.txtId}`;\n\n      this.nome_tam = `59${this.nome_tam}${this.nome}`;\n      this.cidade_tam = `60${this.cidade_tam}${this.cidade}`;\n\n      this.merchantAccount = `26${(14 + this.chavepix.length).toString().padStart(2, '0')}${this.chavepix}`;\n      this.transactionAmount = `54${(2 + valorFloat.length).toString().padStart(2, '0')}${valorFloat}`;\n      this.merchantName = `59${this.nome_tam}`;\n      this.merchantCity = `60${this.cidade_tam}`;\n      this.addDataField = `62${(2 + this.txtId_tam).toString().padStart(2, '0')}${this.addDataField_tam}`;\n\n      const payload = `${this.payloadFormat}${this.merchantAccount}${this.merchantCategCode}${this.transactionCurrency}${this.transactionAmount}${this.countryCode}${this.merchantName}${this.merchantCity}${this.addDataField}${this.crc16}`;\n      this.payloadCompleta = gerarCrc16(payload); // Use a função gerarCrc16 sem \"this\"\n      gerarQrCode(this.payloadCompleta, this.diretorioQrCode);\n    },\n  },\n};\n\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}